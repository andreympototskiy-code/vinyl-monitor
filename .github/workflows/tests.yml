name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3 libatk-bridge2.0-0 libdrm2 libxkbcommon0 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libasound2t64

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov flake8 bandit safety vulture dead isort

    - name: Install Playwright browsers
      run: |
        pip install playwright
        playwright install chromium

    - name: Lint with flake8
      run: |
        flake8 . --max-line-length=120 --exclude=.venv,.github --ignore=E501,W503,E128,W293,W291,E302,E305,E303,E231

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .

    - name: Security check with bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . --exclude .venv --exclude .git --exclude tests

    - name: Check for vulnerabilities with safety
      run: |
        safety check --json || true
        safety check

    - name: Find dead code with vulture
      run: |
        vulture vinyl_monitor.py manage_avito.py convert_state.py --min-confidence 60 || true

    - name: Find unused code with dead
      run: |
        dead --files vinyl_monitor.py,manage_avito.py,convert_state.py --tests tests/ || true

    - name: Run tests
      run: |
        pytest --maxfail=5 --disable-warnings --cov=. --cov-report=xml

    - name: Run message format validation tests
      run: |
        pytest tests/test_vinyl_monitor.py::TestMessageFormatValidation -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
